 #include <bits/stdc++.h>
 bool DFS(int i, vector<int>&vis,vector<int>adj[])
 {
    vis[i]=2;
     
     for(auto it : adj[i])
     {
          if(vis[it]==0)
          {
              if(DFS(it,vis,adj)==true) return true;
          }
          else if(vis[it]==2) return true;
     }
    
    vis[i]=1;
    return false;
 }
int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
  // Write your code here.
       int V = n+1;
       vector<int>adj[V];
       for(auto it : edges)
       {
         adj[it.first].push_back(it.second);
       }
       vector<int>vis(V,0);
       for(int i = 0;i<V;++i)
       {
          if(!vis[i])
          {
              if(DFS(i,vis,adj)==true) return true;
          }
       }
       return false;
  
}
