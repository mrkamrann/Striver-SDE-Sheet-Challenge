#include <bits/stdc++.h>
class Queue {
    // Define the data members(if any) here.
    
   
    public:
    stack<int>s1,s2;

    Queue() {
        // Initialize your data structure here.
        
    }

    void enQueue(int val) {
        // Implement the enqueue() function.
        s1.push(val);
    }

    int deQueue() {
        // Implement the dequeue() function.
        if(s1.empty() && s2.empty()) return -1;
        if(s2.size()>0)
        {
           int x = s2.top();
           s2.pop();
           return x; 
        }
        else
        {

        
        while (!s1.empty()) {
          s2.push(s1.top());
          s1.pop();
        }
        int x = s2.top();
        s2.pop();
        return x;
    }
    }

    int peek() {
        // Implement the peek() function here.
        if(s1.empty() && s2.empty()) return -1;
         if(!s2.empty())
         {
             return s2.top();
         }
         else
         {
           while (!s1.empty()) {
             s2.push(s1.top());
             s1.pop();
           }
           return s2.top();
         }
    }

    bool isEmpty() {
        // Implement the isEmpty() function here.
        if(s1.empty() && s2.empty()) return 1;
        return 0;
    }
};
