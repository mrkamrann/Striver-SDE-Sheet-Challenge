#include <bits/stdc++.h>
bool isGraphBirpatite(vector<vector<int>> &edges) {
	// Write your code here.
	    int V = edges.size();
		unordered_map<int,vector<int>>adj;
		for(int i = 0;i<V;++i)
		{
			for(int j = 0;j<V;++j)
			{
				if(edges[i][j]==1)
				{
					adj[i].push_back(j);
					adj[j].push_back(i);
				}
			}
		}
	    vector<int>vis(V,-1);
	    for(int i = 0;i<V;++i)
	    {
	    if(vis[i]!=-1) continue;
	    queue<int>q;
	    q.push(i);
	    vis[i] = 1;
	    while(!q.empty())
	    {
	        int sz = q.size();
	        for(int i = 0;i<sz;++i)
	        {
	            int t = q.front();
	            q.pop();
	            for(auto it : adj[t])
	            {
	                if(vis[it]==-1)
	                {
	                    if(vis[t]==1)
	                    {
	                        vis[it] = 2;
	                    }
	                    else if(vis[t]==2)
	                    {
	                        vis[it] = 1;
	                    }
	                    q.push(it);
	                }
	                else if(vis[it]==vis[t])
	                {
	                    return false;
	                }
	                
	            }
	        }
	    }
	    }
	    return true;
}
