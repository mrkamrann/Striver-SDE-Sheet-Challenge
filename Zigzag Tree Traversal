#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    if(root==NULL) return {};
    queue<BinaryTreeNode<int>*>q;
    q.push(root);
    vector<int>v;
    int turn = 1;
    while(!q.empty())
    {
       int sz = q.size();
       int n = v.size();
       for(int i = 0;i<sz;++i)
       {
           auto t = q.front();
           q.pop();
           v.push_back(t->data); 
           if(t->left!=NULL) q.push(t->left); 
           if(t->right!=NULL) q.push(t->right); 
       }
       if(!turn)
       {
         reverse(v.begin()+n,v.end());
       }
    
       turn^=1;
    }
    return v;
}
