#include <bits/stdc++.h>
void DFS(int i,unordered_map<int,vector<int>>&mpp,vector<int>&vis,vector<int>&v)
{
    v.push_back(i);
    vis[i] = 1;
    for(auto &it : mpp[i])
    {
        if(!vis[it]) DFS(it,mpp,vis,v);
        
    }
    return;
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &e)
{
    // Write your code he
    vector<vector<int>>ans;
    unordered_map<int,vector<int>>mpp;
    vector<int>vis(V,0);
    for(auto it : e)
    {
        mpp[it[0]].push_back(it[1]);
        mpp[it[1]].push_back(it[0]);
    }
    for(int i = 0;i<V;++i)
    {
        if(!vis[i])
        {   
            vector<int>v;
            DFS(i,mpp,vis,v);
            ans.push_back(v);

        }
    }
    return ans;
}
